{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam-\\\\OneDrive\\\\Dokument\\\\MERN-starter\\\\mern-app\\\\frontend\\\\src\\\\components\\\\Paginate.jsx\";\n/* In a Node.js React app, pagination refers to the process of dividing a large dataset into smaller, manageable chunks or pages. It allows you to display a limited number of items on a page, providing a more efficient and user-friendly way to navigate through the data.\r\nPagination is commonly used when dealing with long lists, search results, or any situation where displaying all the data at once would be overwhelming or slow. */\n\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paginate = _ref => {\n  let {\n    pages,\n    page,\n    isAdmin = false,\n    keyword = ''\n  } = _ref;\n  return pages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [...Array(pages).keys()].map(x => /*#__PURE__*/_jsxDEV(LinkContainer, {\n      to: !isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`,\n      children: /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: x + 1 === page,\n        children: x + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, x + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_c = Paginate;\nexport default Paginate;\nvar _c;\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["Pagination","LinkContainer","jsxDEV","_jsxDEV","Paginate","_ref","pages","page","isAdmin","keyword","children","Array","keys","map","x","to","Item","active","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adam-/OneDrive/Dokument/MERN-starter/mern-app/frontend/src/components/Paginate.jsx"],"sourcesContent":["/* In a Node.js React app, pagination refers to the process of dividing a large dataset into smaller, manageable chunks or pages. It allows you to display a limited number of items on a page, providing a more efficient and user-friendly way to navigate through the data.\r\nPagination is commonly used when dealing with long lists, search results, or any situation where displaying all the data at once would be overwhelming or slow. */\r\n\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;"],"mappings":";AAAA;AACA;;AAEA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,GAAGC,IAAA,IAAoD;EAAA,IAAnD;IAAEC,KAAK;IAAEC,IAAI;IAAEC,OAAO,GAAG,KAAK;IAAEC,OAAO,GAAG;EAAG,CAAC,GAAAJ,IAAA;EAC9D,OACEC,KAAK,GAAG,CAAC,iBACPH,OAAA,CAACH,UAAU;IAAAU,QAAA,EACR,CAAC,GAAGC,KAAK,CAACL,KAAK,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,CAAC,iBAC9BX,OAAA,CAACF,aAAa;MAEZc,EAAE,EACA,CAACP,OAAO,GACJC,OAAO,GACJ,WAAUA,OAAQ,SAAQK,CAAC,GAAG,CAAE,EAAC,GACjC,SAAQA,CAAC,GAAG,CAAE,EAAC,GACjB,sBAAqBA,CAAC,GAAG,CAAE,EACjC;MAAAJ,QAAA,eAEDP,OAAA,CAACH,UAAU,CAACgB,IAAI;QAACC,MAAM,EAAEH,CAAC,GAAG,CAAC,KAAKP,IAAK;QAAAG,QAAA,EAAEI,CAAC,GAAG;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB;IAAC,GAT7DP,CAAC,GAAG,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUG,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CACb;AAEL,CAAC;AAACC,EAAA,GArBIlB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}