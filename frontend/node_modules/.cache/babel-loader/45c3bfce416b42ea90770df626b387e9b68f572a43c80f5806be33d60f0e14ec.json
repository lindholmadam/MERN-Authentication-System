{"ast":null,"code":"// import { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { Form, Button } from 'react-bootstrap';\n// import Message from '../../components/Message';\n// import Loader from '../../components/Loader';\n// import FormContainer from '../../components/FormContainer';\n// import { toast } from 'react-toastify';\n// import { useParams } from 'react-router-dom';\n// import {\n//   useGetUserDetailsQuery,\n//   useUpdateUserMutation,\n// } from '../../slices/usersApiSlice';\n\n// const UserEditScreen = () => {\n//   const { id: userId } = useParams();\n//   const [firstName, setName] = useState('');\n//   const [surname, setSurname] = useState('');\n//   const [email, setEmail] = useState('');\n//   // const [isAdmin, setIsAdmin] = useState(false);\n\n//   const {\n//     data: user,\n//     isLoading,\n//     error,\n//     refetch,\n//   } = useGetUserDetailsQuery(userId);\n\n//   const [updateUser, { isLoading: loadingUpdate }] = useUpdateUserMutation();\n\n//   const navigate = useNavigate();\n\n//   const submitHandler = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await updateUser({ userId, firstName, surname, email });\n//       toast.success('user updated successfully');\n//       refetch();\n//       // navigate('/admin/userlist');\n//     } catch (err) {\n//       toast.error(err?.data?.message || err.error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (user) {\n//       setName(user.firstName);\n//       setSurname(user.surname);\n//       setEmail(user.email);\n//       // setIsAdmin(user.isAdmin);\n//     }\n//   }, [user]);\n\n//   return (\n//     <>\n//       {/* <Link to='/admin/userlist' className='btn btn-light my-3'>\n//         Go Back\n//       </Link> */}\n\n//       <FormContainer>\n//         <h1>Edit User</h1>\n//         {loadingUpdate && <Loader />}\n//         {isLoading ? (\n//           <Loader />\n//         ) : error ? (\n//           <Message variant='danger'>\n//             {error?.data?.message || error.error}\n//           </Message>\n//         ) : (\n//           <Form onSubmit={submitHandler}>\n//             <Form.Group className='my-2' controlId='firstName'>\n//               <Form.Label>Förnamn</Form.Label>\n//               <Form.Control\n//                 type='name'\n//                 placeholder='Enter name'\n//                 value={firstName}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n\n//             <Form.Group className='my-2' controlId='surname'>\n//               <Form.Label>Efternamn</Form.Label>\n//               <Form.Control\n//                 type='surname'\n//                 placeholder='Enter name'\n//                 value={surname}\n//                 onChange={(e) => setSurname(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n\n//             <Form.Group className='my-2' controlId='email'>\n//               <Form.Label>Email</Form.Label>\n//               <Form.Control\n//                 type='email'\n//                 placeholder='Enter email'\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n\n//             {/* <Form.Group className='my-2' controlId='isadmin'>\n//               <Form.Check\n//                 type='checkbox'\n//                 label='Is Admin'\n//                 checked={isAdmin}\n//                 onChange={(e) => setIsAdmin(e.target.checked)}\n//               ></Form.Check>\n//             </Form.Group> */}\n\n//             <Button type='submit' variant='primary'>\n//               Uppdatera\n//             </Button>\n//           </Form>\n//         )}\n//       </FormContainer>\n//     </>\n//   );\n// };\n\n// export default UserEditScreen;","map":{"version":3,"names":[],"sources":["C:/Users/adam-/OneDrive/Dokument/flyttanu.se/flyttanu.se/frontend/src/screens/admin/UserEditScreen.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Form, Button } from 'react-bootstrap';\r\n// import Message from '../../components/Message';\r\n// import Loader from '../../components/Loader';\r\n// import FormContainer from '../../components/FormContainer';\r\n// import { toast } from 'react-toastify';\r\n// import { useParams } from 'react-router-dom';\r\n// import {\r\n//   useGetUserDetailsQuery,\r\n//   useUpdateUserMutation,\r\n// } from '../../slices/usersApiSlice';\r\n\r\n// const UserEditScreen = () => {\r\n//   const { id: userId } = useParams();\r\n//   const [firstName, setName] = useState('');\r\n//   const [surname, setSurname] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   // const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n//   const {\r\n//     data: user,\r\n//     isLoading,\r\n//     error,\r\n//     refetch,\r\n//   } = useGetUserDetailsQuery(userId);\r\n\r\n//   const [updateUser, { isLoading: loadingUpdate }] = useUpdateUserMutation();\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const submitHandler = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await updateUser({ userId, firstName, surname, email });\r\n//       toast.success('user updated successfully');\r\n//       refetch();\r\n//       // navigate('/admin/userlist');\r\n//     } catch (err) {\r\n//       toast.error(err?.data?.message || err.error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (user) {\r\n//       setName(user.firstName);\r\n//       setSurname(user.surname);\r\n//       setEmail(user.email);\r\n//       // setIsAdmin(user.isAdmin);\r\n//     }\r\n//   }, [user]);\r\n\r\n//   return (\r\n//     <>\r\n//       {/* <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n//         Go Back\r\n//       </Link> */}\r\n\r\n//       <FormContainer>\r\n//         <h1>Edit User</h1>\r\n//         {loadingUpdate && <Loader />}\r\n//         {isLoading ? (\r\n//           <Loader />\r\n//         ) : error ? (\r\n//           <Message variant='danger'>\r\n//             {error?.data?.message || error.error}\r\n//           </Message>\r\n//         ) : (\r\n//           <Form onSubmit={submitHandler}>\r\n//             <Form.Group className='my-2' controlId='firstName'>\r\n//               <Form.Label>Förnamn</Form.Label>\r\n//               <Form.Control\r\n//                 type='name'\r\n//                 placeholder='Enter name'\r\n//                 value={firstName}\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className='my-2' controlId='surname'>\r\n//               <Form.Label>Efternamn</Form.Label>\r\n//               <Form.Control\r\n//                 type='surname'\r\n//                 placeholder='Enter name'\r\n//                 value={surname}\r\n//                 onChange={(e) => setSurname(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             <Form.Group className='my-2' controlId='email'>\r\n//               <Form.Label>Email</Form.Label>\r\n//               <Form.Control\r\n//                 type='email'\r\n//                 placeholder='Enter email'\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n\r\n//             {/* <Form.Group className='my-2' controlId='isadmin'>\r\n//               <Form.Check\r\n//                 type='checkbox'\r\n//                 label='Is Admin'\r\n//                 checked={isAdmin}\r\n//                 onChange={(e) => setIsAdmin(e.target.checked)}\r\n//               ></Form.Check>\r\n//             </Form.Group> */}\r\n\r\n//             <Button type='submit' variant='primary'>\r\n//               Uppdatera\r\n//             </Button>\r\n//           </Form>\r\n//         )}\r\n//       </FormContainer>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default UserEditScreen;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}