{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam-\\\\OneDrive\\\\Dokument\\\\flyttanu.se\\\\flyttanu.se\\\\frontend\\\\src\\\\components\\\\googleLogin.jsx\";\nimport React from 'react';\nimport { FcGoogle } from 'react-icons/fc';\n// import { GoogleOAuthProvider } from '@react-oauth/google';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoginPage = () => {\n  const responseGoogle = async response => {\n    try {\n      const {\n        tokenId\n      } = response;\n      const googleToken = tokenId;\n      const res = await fetch('/api/users/auth', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          googleToken\n        })\n      });\n      if (res.ok) {\n        const data = await res.json();\n        console.log(data); // Handle the successful login response\n      } else {\n        throw new Error('Login failed');\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle the login error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\",\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      children: [/*#__PURE__*/_jsxDEV(FcGoogle, {\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" Logga in med Google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this),\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: \"single_host_origin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }, this);\n};\n_c = GoogleLoginPage;\nexport default GoogleLoginPage;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginPage\");","map":{"version":3,"names":["React","FcGoogle","GoogleLogin","jsxDEV","_jsxDEV","GoogleLoginPage","responseGoogle","response","tokenId","googleToken","res","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","Error","error","render","renderProps","type","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onFailure","cookiePolicy","_c","$RefreshReg$"],"sources":["C:/Users/adam-/OneDrive/Dokument/flyttanu.se/flyttanu.se/frontend/src/components/googleLogin.jsx"],"sourcesContent":["import React from 'react';\r\nimport { FcGoogle } from 'react-icons/fc';\r\n// import { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nconst GoogleLoginPage = () => {\r\n  const responseGoogle = async (response) => {\r\n    try {\r\n      const { tokenId } = response;\r\n      const googleToken = tokenId;\r\n\r\n      const res = await fetch('/api/users/auth', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          googleToken,\r\n        }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        console.log(data); // Handle the successful login response\r\n      } else {\r\n        throw new Error('Login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle the login error\r\n    }\r\n  };\r\n\r\n  return (\r\n          <GoogleLogin\r\n            render={(renderProps) => (\r\n              <button\r\n                type=\"button\"\r\n                className=\"\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <FcGoogle className=\"\" /> Logga in med Google\r\n              </button>\r\n            )}\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n  );\r\n};\r\n\r\nexport default GoogleLoginPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC;AACA,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACzC,IAAI;MACF,MAAM;QAAEC;MAAQ,CAAC,GAAGD,QAAQ;MAC5B,MAAME,WAAW,GAAGD,OAAO;MAE3B,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBP;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAIC,GAAG,CAACO,EAAE,EAAE;QACV,MAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACL,MAAM,IAAII,KAAK,CAAC,cAAc,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACpB;IACF;EACF,CAAC;;EAED,oBACQnB,OAAA,CAACF,WAAW;IACVsB,MAAM,EAAGC,WAAW,iBAClBrB,OAAA;MACEsB,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAC,EAAE;MACZC,OAAO,EAAEH,WAAW,CAACG,OAAQ;MAC7BC,QAAQ,EAAEJ,WAAW,CAACI,QAAS;MAAAC,QAAA,gBAE/B1B,OAAA,CAACH,QAAQ;QAAC0B,SAAS,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,wBAC3B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACR;IACFC,SAAS,EAAE7B,cAAe;IAC1B8B,SAAS,EAAE9B,cAAe;IAC1B+B,YAAY,EAAC;EAAoB;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEZ,CAAC;AAACI,EAAA,GA7CIjC,eAAe;AA+CrB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}